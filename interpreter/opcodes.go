package interpreter

const (
    OP_NOP = iota
    OP_CONST
    OP_SYM
    OP_CLOSURE

    OP_LOAD_MODULE
    OP_STORE_MODULE
    OP_STORE_LOCAL
    OP_LOAD_LOCAL
    OP_STORE_UPVALUE
    OP_LOAD_UPVALUE
    OP_STORE_FIELD
    OP_LOAD_FIELD

    OP_MESSAGE

    OP_TYPE
    OP_CALL
    OP_CALL_R
    OP_CALL_0R1

    OP_JUMP_FALSE
    OP_LOOP

    OP_POP
    OP_PRINT
    OP_RETURN
    OP_CLOSE_UPVALUE

    OP_MAKE_LIST
    OP_MAKE_TABLE
    
    OP_MAKE_METHOD
    OP_MAKE_STATIC
    OP_MAKE_NS
    OP_MAKE_OBJ
    OP_MAKE_CONS

    OP_OPERATOR

    OP_RECURSIVE
    OP_END
)

var OPCODE_NAMES = [...]string{
    OP_NOP: "NOP",
    OP_CONST: "CONST",
    OP_SYM: "SYM",
    OP_CLOSURE: "CLOSURE",
    OP_LOAD_MODULE: "LOAD_GLOBAL",
    OP_STORE_MODULE: "STORE_GLOBAL",
    OP_STORE_LOCAL: "STORE_LOCAL",
    OP_LOAD_LOCAL: "LOAD_LOCAL",
    OP_STORE_UPVALUE: "STORE_UPVALUE",
    OP_LOAD_UPVALUE: "LOAD_UPVALUE",
    OP_STORE_FIELD: "STORE_FIELD",
    OP_LOAD_FIELD: "LOAD_FIELD",
    OP_MESSAGE: "MESSAGE",
    OP_TYPE: "TYPE",
    OP_CALL: "CALL",
    OP_CALL_R: "CALL_R",
    OP_CALL_0R1: "CALL_0R1",
    OP_JUMP_FALSE: "JUMP_FALSE",
    OP_LOOP: "LOOP",
    OP_POP: "POP",
    OP_PRINT: "PRINT",
    OP_RETURN: "RETURN",
    OP_CLOSE_UPVALUE: "CLOSE_UPVALUE",
    OP_MAKE_LIST: "MAKE_LIST",
    OP_MAKE_TABLE: "MAKE_TABLE",
    OP_MAKE_METHOD: "MAKE_METHOD",
    OP_MAKE_STATIC: "MAKE_STATIC",
    OP_MAKE_OBJ: "MAKE_OBJ",
    OP_MAKE_CONS: "MAKE_CONS",
    OP_MAKE_NS: "MAKE_NS",
    OP_OPERATOR: "OPERATOR",
    OP_RECURSIVE: "RECURSIVE",
    OP_END: "END",
}